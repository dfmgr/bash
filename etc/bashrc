#!/usr/bin/env bash
# shellcheck shell=bash
# shellcheck disable=SC2317
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# set path
PATH="/usr/local/bin:$PATH"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Set hostname
export HOSTNAME="${HOSTNAME:-$(hostname)}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Create directories
[ -d "$HOME/.config/bash/noprompt" ] || mkdir -p "$HOME/.config/bash/noprompt" &>/dev/null
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source System Bash
if [ -f "/etc/bashrc" ]; then # Fedora/Redhat/CentOS
  . "/etc/bashrc"
elif [ -f "/etc/bash.bashrc" ]; then # Debian/Ubuntu/Arch/Mac/Win
  . "/etc/bash.bashrc"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source .profile
if [ -f "$HOME/.profile" ]; then
  . "$HOME/.profile"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# shellcheck disable=2124,2217
# Set the window title
set_custom_win_title() {
  local cmd_bin="" cmd_args="" window_format="" cmd="" BASEPWD=""
  cmd_bin="$(basename -- "$1")" && shift 1
  cmd_args="${@:1:20}" && shift $#
  cmd="| $cmd_bin $cmd_args"
  BASEPWD="${PWD/#$HOME/~}"
  window_format="$USER@$HOSTNAME"
  if [ -z "$cmd_bin" ] || [[ "$cmd_bin $cmd_args" =~ starship|$SHELL|tmux|screen ]]; then
    cmd="| $(basename -- "$SHELL")"
  fi
  if [ "$PWD" = "$HOME" ]; then
    echo -ne "\033]0; üè† $window_format:~ $cmd\a" </dev/null
  else
    echo -ne "\033]0; üèõÔ∏è $window_format:$BASEPWD $cmd\a" </dev/null
  fi
  trap 'set_custom_win_title ${BASH_COMMAND}' DEBUG
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source users functions
userbashfunctions() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash/functions"/*.bash "$HOME/.config/misc/shell/functions"/*.sh; do
    [ -f "$f" ] && . "$f"
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#ensure the exports get loaded
userbashexports() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash/exports"/*.bash; do
    [ -f "$f" ] && . "$f" &>/dev/null
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source additional bash scripts
userbashprofile() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash/profile"/*.bash; do
    [ -f "$f" ] && . "$f" &>/dev/null
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source additional aliases scripts
userbashaliases() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash/aliases"/*.bash; do
    [ -f "$f" ] && . "$f" &>/dev/null
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source additional completion scripts
userbashcompletions() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash/completions"/*.bash; do
    [ -f "$f" ] && . "$f" &>/dev/null
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source plugins
userbashplugins() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash/plugins"/*.bash; do
    [ -f "$f" ] && . "$f" &>/dev/null
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source additional PS1 prompt scripts
userbashprompt() {
  local f
  unset BASH_PROMPT PROMPT_COMMAND PS1 PS2 PS3 PS4
  if [ -f "$HOME/.config/bash/server-prompt.sh" ]; then
    . "$HOME/.config/bash/server-prompt.sh"
  else
    shopt -s nullglob
    local prompt_files=("$HOME/.config/bash/prompt"/*.bash)
    shopt -u nullglob
    if [ ${#prompt_files[@]} -gt 0 ]; then
      for f in "${prompt_files[@]}"; do
        [ -f "$f" ] && . "$f" &>/dev/null
      done
    elif [ -n "$(type -P starship)" ]; then
      export starship_precmd_user_func="set_custom_win_title"
      eval -- "$(starship init bash --print-full-init)"
      export PROMPT_COMMAND="${STARSHIP_PROMPT_COMMAND:-starship_precmd}"
    fi
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source OS specific
userbashos() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash"/*/*.load; do
    [ -f "$f" ] && . "$f" &>/dev/null
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source additional user bash scripts
userbashprofilelocal() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash/local"/*.bash; do
    [ -f "$f" ] && . "$f" &>/dev/null
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
userbashprofilepost() {
  local f
  shopt -s nullglob
  for f in "$HOME/.config/bash/post"/*.bash; do
    [ -f "$f" ] && . "$f" &>/dev/null
  done
  shopt -u nullglob
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
for executeuserfunct in userbashfunctions userbashexports userbashprofile userbashaliases \
  userbashcompletions userbashplugins userbashprompt userbashos userbashprofilelocal \
  userbashprofilepost; do
  $executeuserfunct
done
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#Local file
if [ -f "$HOME/.config/local/bash.local" ]; then
  . "$HOME/.config/local/bash.local"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#Servers specific
if [ -f "$HOME/.config/local/bash.servers.local" ]; then
  . "$HOME/.config/local/bash.servers.local"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#System specific
if [ -f "$HOME/.config/local/bash.$HOSTNAME.local" ]; then
  . "$HOME/.config/local/bash.$HOSTNAME.local"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
BASHRCSRC="$HOME/.bashrc"
# Deduplicate PATH using pure bash
if [[ "$PATH" == *:*:* ]] || [[ "$PATH" =~ : ]]; then
  declare -A seen
  new_path=""
  IFS=':' read -ra path_array <<< "$PATH"
  for dir in "${path_array[@]}"; do
    if [[ -z "${seen[$dir]}" ]]; then
      seen[$dir]=1
      new_path="${new_path}${new_path:+:}${dir}"
    fi
  done
  PATH="$new_path"
  unset seen new_path path_array dir
fi
export PATH BASHRCSRC
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
show_welcome_msg
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# run neofetch
if [ "$BASHRC_SHOW_NEFETCH" != "no" ]; then
  if [ -n "$(builtin command -v neofetch 2>/dev/null)" ]; then
    neofetch
  fi
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Send an e-mail every time you login
if [ "$BASHRC_SEND_NOTIFY" != "no" ]; then
  if builtin type -P mailx &>/dev/null || builtin type -P mail &>/dev/null; then
    echo "ALERT - Shell Access on $HOSTNAME from $USER on: $(date +'%Y-%m-%d at %H:%M')" | mail -r "ALERTS <no-reply@$HOSTNAME>" -s "Alert: Access from $USER" $USER@$HOSTNAME
  fi
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
unset -f userbashfunctions userbashexports userbashprofile
unset -f userbashaliases userbashcompletions userbashplugins
unset -f userbashprompt userbashos userbashprofilelocal userbashprofilepost
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
